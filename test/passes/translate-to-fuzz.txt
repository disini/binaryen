(module
 (global $hangLimit (mut i32) (i32.const 100))
 (memory $0 1 1)
 (export "func_0" (func $func_0))
 (export "func_2" (func $func_2))
 (export "func_4" (func $func_4))
 (export "func_5" (func $func_5))
 (export "func_7" (func $func_7))
 (export "func_8" (func $func_8))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (result i32)
  (local $0 f32)
  (local $1 i64)
  (local $2 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const -5)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (if
    (loop $label$1 (result i32)
     (block
      (if
       (i32.eqz
        (get_global $hangLimit)
       )
       (return
        (i32.const -37)
       )
      )
      (set_global $hangLimit
       (i32.sub
        (get_global $hangLimit)
        (i32.const 1)
       )
      )
     )
     (select
      (loop $label$10 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const 32767)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$11 (result i32)
        (i32.const 24342)
       )
      )
      (i32.load8_s offset=2
       (i32.and
        (br_if $label$0
         (i32.trunc_s/f64
          (loop $label$14 (result f64)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const 0)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block $label$15 (result f64)
            (br $label$1)
           )
          )
         )
         (i32.eqz
          (i32.trunc_u/f64
           (loop $label$12 (result f64)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (i32.const -128)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (block $label$13 (result f64)
             (return
              (i32.const -10)
             )
            )
           )
          )
         )
        )
        (i32.const 31)
       )
      )
      (br_if $label$0
       (loop $label$2 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 1)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block $label$3 (result i32)
         (i32.popcnt
          (select
           (if (result i32)
            (i32.eqz
             (if (result i32)
              (i32.eqz
               (i32.const -1)
              )
              (i32.const 0)
              (i32.const 0)
             )
            )
            (block $label$5 (result i32)
             (loop $label$6 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i32.const -41)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (i64.lt_s
               (i64.const 1100)
               (if (result i64)
                (i32.eqz
                 (i32.const -88)
                )
                (get_local $1)
                (get_local $1)
               )
              )
             )
            )
            (block $label$7 (result i32)
             (br $label$1)
            )
           )
           (select
            (br_if $label$3
             (i32.const 65535)
             (loop $label$8 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i32.const 10)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$9 (result i32)
               (i32.const 127)
              )
             )
            )
            (i32.const 67372036)
            (i32.const -72)
           )
           (br_if $label$3
            (block $label$4 (result i32)
             (br $label$2)
            )
            (i32.const -2147483648)
           )
          )
         )
        )
       )
       (i32.eqz
        (i32.const -1)
       )
      )
     )
    )
    (block $label$16
     (br_if $label$16
      (i32.eqz
       (block $label$17 (result i32)
        (br $label$16)
       )
      )
     )
     (f32.store offset=3
      (i32.const 5661)
      (call $deNan32
       (select
        (if (result f32)
         (i32.eqz
          (i32.const 23)
         )
         (block $label$23 (result f32)
          (if (result f32)
           (i32.eqz
            (i32.const 3330)
           )
           (block $label$24 (result f32)
            (br $label$16)
           )
           (f32.load offset=22
            (block $label$25 (result i32)
             (i32.const -1)
            )
           )
          )
         )
         (f32.load offset=1 align=1
          (i32.and
           (if (result i32)
            (i32.trunc_u/f32
             (call $deNan32
              (select
               (loop $label$27 (result f32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i32.const -31)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (get_local $0)
               )
               (block $label$28 (result f32)
                (br $label$16)
               )
               (loop $label$26 (result i32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i32.const 65518)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (if (result i32)
                 (i32.const 1)
                 (i32.const -32768)
                 (i32.const 1392974931)
                )
               )
              )
             )
            )
            (call $func_0)
            (i32.trunc_s/f32
             (tee_local $2
              (f32.const 9223372036854775808)
             )
            )
           )
           (i32.const 31)
          )
         )
        )
        (f32.load offset=4
         (i32.and
          (br_if $label$0
           (i32.load8_u offset=3
            (i32.and
             (loop $label$36 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i32.const -128)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$37 (result i32)
               (br $label$16)
              )
             )
             (i32.const 31)
            )
           )
           (i32.eqz
            (block $label$29 (result i32)
             (if (result i32)
              (i32.const 0)
              (block $label$30 (result i32)
               (if (result i32)
                (i32.eqz
                 (select
                  (f32.lt
                   (get_local $2)
                   (get_local $2)
                  )
                  (select
                   (select
                    (i32.const -101)
                    (i32.const 52)
                    (i32.const 2147483647)
                   )
                   (i32.const 6733)
                   (i32.const -12)
                  )
                  (i32.load8_s offset=22
                   (i32.and
                    (i32.const 976638003)
                    (i32.const 31)
                   )
                  )
                 )
                )
                (block $label$31 (result i32)
                 (br $label$16)
                )
                (block $label$32 (result i32)
                 (br $label$16)
                )
               )
              )
              (block $label$33 (result i32)
               (f64.store offset=2
                (i32.and
                 (loop $label$34 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i32.const -2147483648)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block $label$35 (result i32)
                   (i32.trunc_u/f32
                    (get_local $2)
                   )
                  )
                 )
                 (i32.const 31)
                )
                (f64.const 6409)
               )
               (br $label$16)
              )
             )
            )
           )
          )
          (i32.const 31)
         )
        )
        (if (result i32)
         (i32.const 2147483647)
         (block $label$18 (result i32)
          (f32.store offset=1
           (i32.and
            (br_if $label$18
             (i32.load8_s offset=22
              (i32.and
               (br_if $label$0
                (block $label$19 (result i32)
                 (return
                  (i32.const 201)
                 )
                )
                (i32.const 1465323825)
               )
               (i32.const 31)
              )
             )
             (i32.load8_u offset=4
              (i32.and
               (br_if $label$0
                (i32.load16_s offset=3
                 (i32.and
                  (f32.gt
                   (get_local $0)
                   (f32.load offset=2 align=1
                    (i32.and
                     (i32.const 65453)
                     (i32.const 31)
                    )
                   )
                  )
                  (i32.const 31)
                 )
                )
                (i32.const 2147483647)
               )
               (i32.const 31)
              )
             )
            )
            (i32.const 31)
           )
           (block $label$20 (result f32)
            (call $deNan32
             (f32.convert_u/i64
              (i64.trunc_u/f32
               (call $deNan32
                (f32.min
                 (tee_local $0
                  (f32.const 2.8411366687849113e-29)
                 )
                 (block $label$21 (result f32)
                  (br $label$16)
                 )
                )
               )
              )
             )
            )
           )
          )
          (br $label$16)
         )
         (block $label$22 (result i32)
          (i32.const -44)
         )
        )
       )
      )
     )
    )
    (block $label$38
     (if
      (i32.eqz
       (i32.const 73)
      )
      (block $label$39
       (loop $label$40
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 2147483647)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (nop)
       )
      )
      (block $label$41
       (loop $label$42
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 167857947)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block $label$43
         (if
          (block $label$44 (result i32)
           (if
            (select
             (i32.const 68027396)
             (call $func_0)
             (i32.const 127)
            )
            (loop $label$45
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const 2147483647)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (set_local $2
              (if (result f32)
               (i32.eqz
                (i32.const 0)
               )
               (block $label$46 (result f32)
                (br $label$43)
               )
               (f32.const 70)
              )
             )
            )
            (block $label$47
             (nop)
            )
           )
           (loop $label$48 (result i32)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (i32.const 218628885)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (i32.const 134561796)
           )
          )
          (block $label$49
           (loop $label$50
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (i32.const -73)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (f32.store offset=1
             (i32.and
              (if (result i32)
               (i32.eqz
                (i32.const -1)
               )
               (f64.gt
                (f64.const 2.314826290848667e-289)
                (f64.const 2.5152972121526945e-172)
               )
               (i32.const -71)
              )
              (i32.const 31)
             )
             (call $deNan32
              (f32.convert_u/i32
               (i32.const -32)
              )
             )
            )
           )
          )
          (block $label$51
           (nop)
          )
         )
        )
       )
      )
     )
    )
   )
   (block $label$52
    (f64.store offset=4 align=4
     (i32.and
      (block $label$53 (result i32)
       (return
        (i32.const -11)
       )
      )
      (i32.const 31)
     )
     (f64.const 3402823466385288598117041e14)
    )
   )
   (return
    (i32.const 22064)
   )
  )
 )
 (func $func_1 (result f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f32.const -nan:0x7fffd7)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f32)
   (nop)
   (return
    (f32.const -nan:0x7fffcc)
   )
  )
 )
 (func $func_2 (result i64)
  (local $0 f64)
  (local $1 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const 65535)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i64.const -75)
 )
 (func $func_3 (result f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f32.const 0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f32)
   (if (result f32)
    (i32.eqz
     (call $func_0)
    )
    (block $label$1 (result f32)
     (nop)
     (call $deNan32
      (select
       (f32.load offset=22 align=1
        (i32.and
         (i32.wrap/i64
          (loop $label$2 (result i64)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (f32.const -88)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block $label$3 (result i64)
            (select
             (block $label$5 (result i64)
              (return
               (f32.const 65479)
              )
             )
             (if (result i64)
              (i32.const 0)
              (block $label$6 (result i64)
               (br $label$2)
              )
              (block $label$7 (result i64)
               (return
                (f32.const -109)
               )
              )
             )
             (block $label$4 (result i32)
              (return
               (f32.const 1.9142481055608796e-22)
              )
             )
            )
           )
          )
         )
         (i32.const 31)
        )
       )
       (call $deNan32
        (f32.demote/f64
         (call $deNan64
          (f64.add
           (f64.const -nan:0xfffffffffffe6)
           (call $deNan64
            (select
             (f64.const 6.146610220788184e-183)
             (loop $label$18 (result f64)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (f32.const -93)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$19 (result f64)
               (call $deNan64
                (f64.nearest
                 (call $deNan64
                  (f64.convert_u/i32
                   (i32.const -45)
                  )
                 )
                )
               )
              )
             )
             (block $label$10 (result i32)
              (br_if $label$10
               (if (result i32)
                (select
                 (call $func_0)
                 (i32.trunc_s/f64
                  (f64.const -nan:0xfffffffffffdd)
                 )
                 (if (result i32)
                  (i32.eqz
                   (i32.const 2113936401)
                  )
                  (select
                   (loop $label$15 (result i32)
                    (block
                     (if
                      (i32.eqz
                       (get_global $hangLimit)
                      )
                      (return
                       (f32.const -nan:0x7fffea)
                      )
                     )
                     (set_global $hangLimit
                      (i32.sub
                       (get_global $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.const -90)
                   )
                   (i32.const 2097561141)
                   (i32.const 127)
                  )
                  (i32.const 5918)
                 )
                )
                (block $label$16 (result i32)
                 (return
                  (f32.const 18446744073709551615)
                 )
                )
                (block $label$17 (result i32)
                 (return
                  (f32.const 253)
                 )
                )
               )
               (f64.le
                (loop $label$11 (result f64)
                 (block
                  (if
                   (i32.eqz
                    (get_global $hangLimit)
                   )
                   (return
                    (f32.const 1.1754943508222875e-38)
                   )
                  )
                  (set_global $hangLimit
                   (i32.sub
                    (get_global $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block $label$12 (result f64)
                  (block $label$13 (result f64)
                   (return
                    (f32.const 3402823466385288598117041e14)
                   )
                  )
                 )
                )
                (f64.const -88)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       (i32.const 74)
      )
     )
    )
    (block $label$20 (result f32)
     (nop)
     (nop)
     (return
      (f32.const -3)
     )
    )
   )
  )
 )
 (func $func_4 (result i64)
  (local $0 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const 9223372036854775807)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (return
    (i64.const 9223372036854775807)
   )
  )
 )
 (func $func_5
  (local $0 f64)
  (local $1 i32)
  (local $2 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (drop
   (call $func_3)
  )
 )
 (func $func_6 (result f32)
  (local $0 i64)
  (local $1 f32)
  (local $2 f64)
  (local $3 i64)
  (local $4 i64)
  (local $5 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f32.const -1)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (call $func_1)
 )
 (func $func_7 (result f32)
  (local $0 f32)
  (local $1 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (if (result f32)
   (tee_local $1
    (tee_local $1
     (i32.const 65535)
    )
   )
   (loop $label$0 (result f32)
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return
       (get_local $0)
      )
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block $label$1 (result f32)
     (tee_local $0
      (tee_local $0
       (if (result f32)
        (i32.load16_s offset=22 align=1
         (i32.and
          (if (result i32)
           (tee_local $1
            (get_local $1)
           )
           (block $label$2 (result i32)
            (return
             (get_local $0)
            )
           )
           (block $label$3 (result i32)
            (return
             (get_local $0)
            )
           )
          )
          (i32.const 31)
         )
        )
        (tee_local $0
         (f32.load offset=22
          (i32.and
           (i32.const 32767)
           (i32.const 31)
          )
         )
        )
        (block $label$4 (result f32)
         (br $label$0)
        )
       )
      )
     )
    )
   )
   (block $label$5 (result f32)
    (br_if $label$5
     (tee_local $0
      (call $deNan32
       (f32.max
        (f32.load offset=22
         (i32.and
          (select
           (tee_local $1
            (call $func_0)
           )
           (tee_local $1
            (i32.load8_s offset=4
             (i32.and
              (block $label$10 (result i32)
               (return
                (f32.const -27)
               )
              )
              (i32.const 31)
             )
            )
           )
           (i32.rem_u
            (loop $label$8 (result i32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (get_local $0)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (block $label$9 (result i32)
              (i32.shr_u
               (select
                (i32.const 1497849685)
                (tee_local $1
                 (tee_local $1
                  (get_local $1)
                 )
                )
                (get_local $1)
               )
               (get_local $1)
              )
             )
            )
            (call $func_0)
           )
          )
          (i32.const 31)
         )
        )
        (loop $label$11 (result f32)
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return
            (get_local $0)
           )
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block $label$12 (result f32)
          (tee_local $0
           (block $label$13 (result f32)
            (return
             (f32.const -nan:0x7fffec)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.eqz
      (block $label$6 (result i32)
       (i32.load16_s offset=4 align=1
        (i32.and
         (loop $label$7 (result i32)
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (f32.const 65486)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (tee_local $1
           (i32.load offset=22
            (i32.and
             (get_local $1)
             (i32.const 31)
            )
           )
          )
         )
         (i32.const 31)
        )
       )
      )
     )
    )
   )
  )
 )
 (func $func_8 (result i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 65535)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (f32.eq
    (f32.const -nan:0x7ffff1)
    (call $deNan32
     (select
      (block $label$3 (result f32)
       (return
        (i32.const 1)
       )
      )
      (if (result f32)
       (i32.eqz
        (i32.const 709173281)
       )
       (block $label$4 (result f32)
        (f32.const 8.104309321630391e-21)
       )
       (block $label$5 (result f32)
        (drop
         (i32.shr_u
          (br_if $label$0
           (block $label$7 (result i32)
            (return
             (i32.const 65432)
            )
           )
           (i32.eqz
            (i32.wrap/i64
             (loop $label$6 (result i64)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i32.const 65425)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (i64.xor
               (i64.extend_u/i32
                (br_if $label$0
                 (i32.const 12)
                 (i32.div_u
                  (i32.const -96)
                  (i32.const 0)
                 )
                )
               )
               (i64.const 8606517916339761162)
              )
             )
            )
           )
          )
          (f32.le
           (call $func_6)
           (call $deNan32
            (f32.sub
             (f32.const 9223372036854775808)
             (f32.const 22107)
            )
           )
          )
         )
        )
        (if
         (i32.eqz
          (i32.const 1543)
         )
         (block $label$8
          (br_if $label$8
           (i32.load8_u offset=4
            (i32.and
             (i32.const 126)
             (i32.const 31)
            )
           )
          )
         )
         (nop)
        )
        (f32.const 1.1754943508222875e-38)
       )
      )
      (select
       (loop $label$1 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const -80)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block $label$2 (result i32)
         (return
          (i32.const 65509)
         )
        )
       )
       (i32.const 509639793)
       (i32.trunc_s/f64
        (call $deNan64
         (f64.convert_u/i32
          (i32.const 65487)
         )
        )
       )
      )
     )
    )
   )
  )
 )
 (func $hangLimitInitializer
  (set_global $hangLimit
   (i32.const 100)
  )
 )
 (func $deNan32 (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
